<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vue on stanley的博客</title>
    <link>https://stanleylfc.github.io/categories/vue/</link>
    <description>Recent content in vue on stanley的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Apr 2020 09:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://stanleylfc.github.io/categories/vue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue 实战（一）| vue</title>
      <link>https://stanleylfc.github.io/post/vue/2020-04-23-vue-vue/</link>
      <pubDate>Thu, 23 Apr 2020 09:00:00 +0800</pubDate>
      
      <guid>https://stanleylfc.github.io/post/vue/2020-04-23-vue-vue/</guid>
      <description>VUEX中的dispatch()和commit() commit: 同步操作 存储 this.$store.commit(&#39;changeValue&#39;,name) 取值 this.$store.state.changeValue dispatch: 异步操作 存储 this.$store.dispatch(&#39;getlists&#39;,name) 取值 this.$store.getters.getlists this.$store.dispatch(&#39;user/login&#39;, this.loginForm) 访问store 下面user 模块的login 方法 router.push(&#39;/login&#39;) &#39;/login&#39;前端路由</description>
    </item>
    
    <item>
      <title>vue 实战（三）| vuecli</title>
      <link>https://stanleylfc.github.io/post/vue/2020-04-23-vue-vuecli/</link>
      <pubDate>Thu, 23 Apr 2020 09:00:00 +0800</pubDate>
      
      <guid>https://stanleylfc.github.io/post/vue/2020-04-23-vue-vuecli/</guid>
      <description>1. 安装 1.1 安装vue-cli npm install -g @vue/cli # -g 全局安装 1.2 版本查看 这个命令来检查其版本是否正确 vue --version 2. 创建项目 2.1 创建项目命令 vue create testapp 2.2 选择自定义 default (babel, eslint) ❯ Manually select features 2.3 空格选择，enter确认 ❯◉ Babel ◯ TypeScript ◯ Progressive Web App (PWA) Support ◯ Router ◯ Vuex ◯ CSS Pre-processors ◉ Linter / Formatter ◯ Unit Testing ◯ E2E Testing 2.4 配置独立一个文件还是一个文件 In dedicated config files &amp;gt; In package.json 2.5 tree -L 1 查</description>
    </item>
    
    <item>
      <title>vue 实战（二）| node</title>
      <link>https://stanleylfc.github.io/post/vue/2020-04-22-vue-node/</link>
      <pubDate>Wed, 22 Apr 2020 09:00:00 +0800</pubDate>
      
      <guid>https://stanleylfc.github.io/post/vue/2020-04-22-vue-node/</guid>
      <description></description>
    </item>
    
    <item>
      <title>vue 实战（六）| Vue Router</title>
      <link>https://stanleylfc.github.io/post/vue/2020-04-22-vue-Vue-Router/</link>
      <pubDate>Sun, 19 Apr 2020 09:00:00 +0800</pubDate>
      
      <guid>https://stanleylfc.github.io/post/vue/2020-04-22-vue-Vue-Router/</guid>
      <description>1 html 1.1 router-link 使用 router-link 组件来导航。 通过传入 to 属性指定链接。 默认会被渲染成一个 &amp;lt;a&amp;gt; 标签。 &amp;lt;router-link to=&amp;quot;/foo&amp;quot;&amp;gt;Go to Foo&amp;lt;/router-link&amp;gt; 1.2 router-view 路由出口 路由匹配到的组件将渲染在这里 &amp;lt;router-view&amp;gt;&amp;lt;/router-view&amp;gt; 2 javascript 2.1 初始化 如果使用模块化机制编程，导入Vue和VueRouter，要调用 Vue.use(VueRouter) 2.2 定义组件 定义 (路由) 组件。 可以从其他文件 import 进来 const Foo = { template: &#39;&amp;lt;div&amp;gt;foo&amp;lt;/div&amp;gt;&#39; } const Bar = { template: &#39;&amp;lt;div&amp;gt;bar&amp;lt;/div&amp;gt;&#39; } 2.3</description>
    </item>
    
  </channel>
</rss>